<?php
/**
 * Copyright Â© Klarna Bank AB (publ)
 *
 * For the full copyright and license information, please view the NOTICE
 * and LICENSE files that were distributed with this source code.
 */

/** @var Klarna\Kec\Block\Cart $block */
/** @var Magento\Framework\Escaper $escaper */
?>

<div id="klarna-kec-placeholder" style="width: 100%"></div>

<?php
if ($block->isShowable()): ?>
    <?php $authCallbackToken = $block->getAuthCallbackToken(true); ?>
    <script>
        window.klarnaAsyncCallback = function () {
            window.Klarna.Payments.Buttons.init({
                client_id: "<?= $escaper->escapeUrl($block->getClientId()) ?>",
            }).load(
                {
                    container: "#klarna-kec-placeholder",
                    theme: "<?= $escaper->escapeUrl($block->getTheme()) ?>",
                    shape: "<?= $escaper->escapeUrl($block->getShape()) ?>",
                    locale: "<?= $escaper->escapeUrl($block->getLocale()) ?>",
                    on_click: (authorize) => {
                        require(
                            [
                                'mage/storage',
                                'Magento_Checkout/js/model/quote',
                                'mage/url',
                                'jquery',
                            ], function (storage, magentoQuote, urlBuilder, $) {
                                var input = {
                                    use_existing_quote: '1'
                                }

                                if (!magentoQuote.isVirtual()) {
                                    if (magentoQuote.shippingMethod() !== null) {
                                        input['shipping_method'] = magentoQuote.shippingMethod().method_code;
                                        input['shipping_carrier_code'] = magentoQuote.shippingMethod().carrier_code;
                                    }

                                    input['country_id'] = magentoQuote.shippingAddress().countryId;
                                }

                                input['auth_callback_token'] = '<?= $escaper->escapeUrl($authCallbackToken) ?>';

                                var form = new FormData();
                                form.set('additional_input', JSON.stringify(input));

                                $.ajax({
                                    url: urlBuilder.build("checkout/klarna/getPayLoad"),
                                    data: form,
                                    type: 'post',
                                    dataType: 'json',
                                    cache: false,
                                    contentType: false,
                                    processData: false,
                                    success: function (result) {
                                        authorize(
                                            {
                                                collect_shipping_address: true,
                                                auto_finalize: false
                                            },
                                            result,
                                            (klarnaResult) => {
                                                require(['Klarna_Kec/js/action/workflow'], function (kec_workflow) {
                                                    kec_workflow(klarnaResult, form);
                                                });
                                            });
                                    }
                                });
                            },
                        );
                    }
                }
            );
        };
    </script>
<?php endif ?>
